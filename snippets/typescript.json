{
  "default action": {
    "prefix": "daction",
    "description": "default action",
    "body": [
      "import type { Actions } from '@sveltejs/kit';",
      "",
      "export const actions: Actions = {",
      "\tdefault: async ({ request }) => {",
      "\t\tconst formData = await request.formData();",
      "",
      "\t\tconst formEntires = [];",
      "\t\tfor (const pair of formData.entries()) {",
      "\t\t\tconsole.log(`${pair[0]}, ${pair[1]}`);",
      "\t\t\tformEntires.push({ [pair[0]]: pair[1] });",
      "\t\t}",
      "",
      "\t\treturn { formEntires };",
      "\t}",
      "};"
    ]
  },
  "named action": {
    "prefix": "naction",
    "description": "named action",
    "body": [
      "import type { Actions } from '@sveltejs/kit';",
      "",
      "export const actions: Actions = {",
      "\t$1: async ({ request }) => {",
      "\t\tconst formData = await request.formData();",
      "",
      "\t\tconst formEntires = [];",
      "\t\tfor (const pair of formData.entries()) {",
      "\t\t\tconsole.log(`${pair[0]}, ${pair[1]}`);",
      "\t\t\tformEntires.push({ [pair[0]]: pair[1] });",
      "\t\t}",
      "",
      "\t\treturn { formEntires };",
      "\t}",
      "};"
    ]
  },
  "pageServerLoad": {
    "prefix": "pageServerLoad",
    "description": "Page Server Load",
    "body": [
      "import type { PageServerLoad } from './\\$types';",
      "",
      "export const load: PageServerLoad = async () => {",
      "\treturn { key: 'value' };",
      "};",
      "",
      ""
    ]
  },
  "fullPageServerLoad": {
    "prefix": "fullPageServerLoad",
    "description": "Full Page Server Load",
    "body": [
      "import type { PageServerLoad } from './\\$types';",
      "",
      "export const load: PageServerLoad = async ({ url, route, params }) => {",
      "\tconsole.log(url);",
      "\tconsole.log(route);",
      "\tconsole.log(params);",
      "",
      "\treturn { key: 'value' };",
      "};",
      "",
      ""
    ]
  },
  "log": {
    "prefix": "log",
    "description": "log to console",
    "body": [
      "console.log(\"$1 : \", $1);$2"
    ]
  },
  "logg": {
    "prefix": "logg",
    "description": "logg to console",
    "body": [
      "console.log(\"$1\");$2"
    ]
  },
  "dir": {
    "prefix": "dir",
    "description": "dir to console",
    "body": [
      "console.dir($0);"
    ]
  },
  "Action": {
    "prefix": "action",
    "body": [
      "function action(node: HTMLElement, params: number) {",
      "  // the node has been mounted in the DOM",
      "  console.log(\"node : \", node);",
      "",
      "  // the Action attribute value is logged to the console",
      "  console.log(\"params : \", params);",
      "",
      "  return {",
      "    update(newParams: number) {",
      "      // the new Action attribute value is logged to the console",
      "      console.log(\"newParams : \", newParams);",
      "    },",
      "    // this runs when the component is unmounted",
      "    destroy() {",
      "      console.log(\"the node has been removed from the DOM\");",
      "    },",
      "  };",
      "}",
      ""
    ],
    "description": "Svelte Action"
  },
  "warn": {
    "prefix": "warn",
    "description": "warn to console",
    "body": [
      "console.warn(\"$1 : \", $1);$2"
    ]
  },
  "warnn": {
    "prefix": "warnn",
    "description": "warnn to console",
    "body": [
      "console.warn($1);$2"
    ]
  }
}